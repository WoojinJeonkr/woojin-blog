---
import { readAlgorithmPostAll } from "../lib/markdoc/read";
import { blog } from "../lib/markdoc/frontmatter.schema";
import PageLayout from "../layouts/PageLayout.astro";
import PageMeta from "../components/PageMeta.astro";
import TagCloud from "../components/TagCloud.astro";
import { SITE_TITLE } from "../config";

const tagsToFilter = ['BFE', 'Programmers', 'Hackerrank', 'Baekjoon', 'JSChallenger', 'SQL Practice', 'PromLens'];
const posts = await readAlgorithmPostAll({
  directory: "blog",
  frontmatterSchema: blog,
  filterByTags: tagsToFilter
});


const sortedPosts = posts
  .filter((p) => p.frontmatter.draft !== true)
  .sort(
    (a, b) =>
      new Date(b.frontmatter.date).valueOf() -
      new Date(a.frontmatter.date).valueOf()
  );

const postCount = sortedPosts.length;
---

<PageLayout>
  <PageMeta title={`Algorithm | ${SITE_TITLE}`} slot="meta" />
  <section slot="main">
    <TagCloud posts={posts} page="algorithm" />
    <div style="margin-top: 5px; margin-bottom: 25px; text-align: right; font-size: 13px; color: gray;">
      Total {postCount} { postCount > 1 ? "posts" : "post" }
    </div>
    <ul>
      {
        sortedPosts.map((post) => {
          const formattedDate = new Date(
            post.frontmatter.date
          ).toLocaleDateString("ko-KR", {
            year: "numeric",
            month: "short",
            day: "numeric",
          });
          return (
            <li class="grid grid-cols-[1fr] md:grid-cols-[1fr_auto] mb-3 md:gap-2 items-start">
              <div class="title">
                {post.frontmatter.external ? (
                  <a
                    href={post.frontmatter.url}
                    target="_blank"
                    class="unset hover:text-text-link"
                  >
                    <span>{post.frontmatter.title}</span>
                    <span>
                      <i class="ml-1 mr-1 text-[12px] pb-2 fa-solid fa-up-right-from-square" />
                    </span>
                  </a>
                ) : (
                  <a
                    href={`/blog/${post.slug}`}
                    class="unset hover:text-text-link"
                  >
                    {post.frontmatter.title}
                  </a>
                )}
              </div>
              <div class="text-text-muted text-sm italic pt-1">
                <time datetime={post.frontmatter.date.toISOString()}>
                  {formattedDate}
                </time>
              </div>
              <div>
                {post.frontmatter.tag.map(tag => (
                  <div class="tag-item">
                    <a href={`/blog/${tag}`}>
                      {tag === Astro.params.tag ? (
                        <div class="tag-selected">
                          {tag}
                        </div>
                      ) : (
                        <div class="tag-badge">
                          {tag}
                        </div>
                      )}
                    </a>
                  </div>
                ))}
              </div>
            </li>
          );
        })
      }
    </ul>
  </section>
</PageLayout>
